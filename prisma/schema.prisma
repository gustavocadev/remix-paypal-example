// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id              String    @id @default(uuid())
  name            String    @db.VarChar(50)
  description     String    @db.VarChar(50)
  image_url       String    @db.VarChar(1024)
  is_subscription Boolean   @default(false)
  duration_months Int       @default(0)
  price           Decimal   @default(0.00) @db.Decimal(7, 2)
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @db.Timestamp(6)
  Order           Order[]

  invoice Invoice[]

  @@map("product")
}

model Order {
  id              String  @id @default(uuid())
  email           String  @db.VarChar(100)
  is_product      Boolean @default(false)
  is_subscription Boolean @default(false)
  type_subs       String? @db.VarChar(10)
  price           Decimal @default(0.00) @db.Decimal(7, 2)
  product_id      String?

  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  product Product? @relation(fields: [product_id], references: [id], onUpdate: Restrict, onDelete: Restrict)

  @@map("order")
}

model Subscription {
  id         String    @id @default(uuid())
  email      String    @db.VarChar(100)
  status     String    @db.VarChar(100)
  type_subs  String    @db.VarChar(100)
  begins_at  DateTime  @default(now()) @db.Date
  ends_at    DateTime  @db.Date
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  invoice Invoice[]

  @@map("subscription")
}

model Invoice {
  id              String    @id @default(uuid())
  invoice_date    DateTime  @default(now())
  email           String
  is_product      Boolean   @default(false)
  is_subscription Boolean   @default(false)
  product_id      String?
  subscription_id String?
  price           Float     @default(0.0)
  created_at      DateTime  @default(now())
  updated_at      DateTime?

  product      Product?      @relation(fields: [product_id], references: [id])
  subscription Subscription? @relation(fields: [subscription_id], references: [id])

  @@map("invoice")
}
